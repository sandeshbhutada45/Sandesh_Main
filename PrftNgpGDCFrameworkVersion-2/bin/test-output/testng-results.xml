<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="1" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-19T13:43:09 IST" name="Default suite" finished-at="2023-07-19T13:43:14 IST" duration-ms="4619">
    <groups>
      <group name="smokes">
        <method signature="ExcelReaderTest.TC001()[pri:1, instance:com.perficient.testCases.ExcelReaderTest@37654521]" name="TC001" class="com.perficient.testCases.ExcelReaderTest"/>
      </group> <!-- smokes -->
      <group name="regression">
        <method signature="ExcelReaderTest.TC001()[pri:1, instance:com.perficient.testCases.ExcelReaderTest@37654521]" name="TC001" class="com.perficient.testCases.ExcelReaderTest"/>
      </group> <!-- regression -->
    </groups>
    <test started-at="2023-07-19T13:43:09 IST" name="Default test" finished-at="2023-07-19T13:43:14 IST" duration-ms="4619">
      <class name="com.perficient.testCases.ExcelReaderTest">
        <test-method is-config="true" signature="generateBuildNumber()[pri:0, instance:com.perficient.testCases.ExcelReaderTest@37654521]" started-at="2023-07-19T13:43:09 IST" name="generateBuildNumber" finished-at="2023-07-19T13:43:09 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateBuildNumber -->
        <test-method is-config="true" signature="setUpBrowser(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.perficient.testCases.ExcelReaderTest@37654521]" started-at="2023-07-19T13:43:09 IST" name="setUpBrowser" finished-at="2023-07-19T13:43:11 IST" duration-ms="1818" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4444]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[QA]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.128.190.5]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[9200]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[ngpautomation]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[_doc]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[testing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowser -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.perficient.testCases.ExcelReaderTest@37654521]" started-at="2023-07-19T13:43:11 IST" name="beforeMethod" finished-at="2023-07-19T13:43:11 IST" duration-ms="291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.perficient.testCases.ExcelReaderTest.TC001() throws java.lang.InterruptedException,java.lang.ClassNotFoundException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC001()[pri:1, instance:com.perficient.testCases.ExcelReaderTest@37654521]" started-at="2023-07-19T13:43:11 IST" name="TC001" description="Verify Excel functionality" finished-at="2023-07-19T13:43:13 IST" duration-ms="2278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC001 -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.perficient.testCases.ExcelReaderTest@37654521]" started-at="2023-07-19T13:43:13 IST" name="afterMethod" finished-at="2023-07-19T13:43:13 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.perficient.testCases.ExcelReaderTest.TC001() throws java.lang.InterruptedException,java.lang.ClassNotFoundException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestContext)[pri:0, instance:com.perficient.testCases.ExcelReaderTest@37654521]" started-at="2023-07-19T13:43:13 IST" name="tearDown" finished-at="2023-07-19T13:43:14 IST" duration-ms="194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@46a388cc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.perficient.testCases.ExcelReaderTest@37654521]" started-at="2023-07-19T13:43:14 IST" name="afterSuite" finished-at="2023-07-19T13:43:14 IST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.perficient.testCases.ExcelReaderTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
